<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Day 1: Installation and Setup on hypathia.net</title>
    <link>/en/day_1.html</link>
    <description>Recent content in Day 1: Installation and Setup on hypathia.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Everything is mine</copyright>
    <lastBuildDate>Thu, 31 May 2018 06:12:26 +0200</lastBuildDate>
    
	<atom:link href="/en/day_1/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Networking</title>
      <link>/en/day_1/networking.html</link>
      <pubDate>Thu, 31 May 2018 06:12:26 +0200</pubDate>
      
      <guid>/en/day_1/networking.html</guid>
      <description> Node Network Pod Network Automatic Certificate Generation Frontend / Load Balancer Make Service available to the World  add DNS resolution for name of the service. It should resolve to the IP Address of the frontend node. add line to /etc/haproxy/sni-domains.lst on the frontend node.  </description>
    </item>
    
    <item>
      <title>Global Configuration</title>
      <link>/en/day_1/global_config.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/day_1/global_config.html</guid>
      <description>When preparing the setup of a hypathia.net cluster, you will need to collect a few pieces information. You should prepare a shell script with these variables as defined below, so you can set them before generating configuration files. The names of the config details will be used in all further configuration templates shown on this website.
You must source the configuration file prior to the execution of any of the shell commands during the installation.</description>
    </item>
    
    <item>
      <title>Certificate Authority</title>
      <link>/en/day_1/certificate-authority.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/day_1/certificate-authority.html</guid>
      <description>Setting up a Certificate Authority and Creating TLS Certificates In this lab you will setup the necessary PKI infrastructure to secure the Kubernetes components. This lab will leverage CloudFlare&amp;rsquo;s PKI toolkit, cfssl, to bootstrap a Certificate Authority and generate TLS certificates to secure the following Kubernetes components:
 etcd kube-apiserver kubelet kube-proxy  After completing this lab you should have the following TLS keys and certificates:
admin.pem admin-key.pem ca-key.pem ca.</description>
    </item>
    
    <item>
      <title>GitLab</title>
      <link>/en/day_1/gitlab.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/day_1/gitlab.html</guid>
      <description>Create a GitLab Instance  Install three machines (virtual or physical) with the current Ubuntu LTS with the following minimal requirements in the following order:  The PostgreSQL Database machine: 2 Cores, 8GB RAM, 100GB system and database disk. The GitLab Web Application: 2 cores, 8GB RAM, 16GB system disk, sufficient storage for user data. 1TB per 1000 Users as a very rough estimate. The GitLab Runner: 2 Cores, 2GB RAM, 16 GB system disk   more details can be found on the GitLab installation page</description>
    </item>
    
    <item>
      <title>Internet Protocol Address Management (IPAM)</title>
      <link>/en/day_1/ipam.html</link>
      <pubDate>Tue, 19 Jun 2018 06:45:19 +0200</pubDate>
      
      <guid>/en/day_1/ipam.html</guid>
      <description> foo
IP Adresses Installing the IAM Server (PowerDNS + d PXE Booting </description>
    </item>
    
    <item>
      <title>Image Management</title>
      <link>/en/day_1/image-management.html</link>
      <pubDate>Fri, 18 May 2018 11:15:43 +0200</pubDate>
      
      <guid>/en/day_1/image-management.html</guid>
      <description> Image Proxy Cache Private Registry Registry Permissions </description>
    </item>
    
  </channel>
</rss>